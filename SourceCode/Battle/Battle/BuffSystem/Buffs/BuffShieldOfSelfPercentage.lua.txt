----------------------------------------------------------------------
--------- 2023年01月30日 16:52:26 星期一
----------------------------------------------------------------------
---- 生命值百分比护盾
local BasePersistentBuff = require "GameLogic.Battle.BuffSystem.BasePersistentBuff"

---@class BuffShieldOfSelfPercentage:BasePersistentBuff
local BuffShieldOfSelfPercentage = class("BuffShieldOfSelfPercentage", BasePersistentBuff)
local M = BuffShieldOfSelfPercentage

--- buff创建开始生效前的处理
function M:_onEnter()
    self:_initShield()
    self:_doModify()
end

function M:_onUpdate(deltaTime)

end

function M:_onExit()
    self.result = 0
    self.hostCharacter:GetBaseAtt():RemoveShieldEff(self)
end

function M:_initShield()
    local fromCharacter = self.hostCharacter:GetBattleContext():GetCharacterManager():GetCharacterById(self.fromId)
    --- 生命值上限
    local hpMax = fromCharacter:GetAttribute():GetAttackCurrentValue(BattleEnum.BuffChangeAttributeType
        .AttributeType_HP_1)
    BattleLogger.logNumerical("生命值上限 : ", hpMax)
    --- 护盾系数
    local k = self:skillCoefficient(fromCharacter, self.buffParams)
    BattleLogger.logNumerical("护盾系数 : ", k)
    ---- 玩法护盾系数
    local play_k = self:IsPlayType(1) and
        ConfigHandler:GetEntry(GameDefine.TableName.Global, "Battle_Shield_Formula_World_Param") or 1
    BattleLogger.logNumerical("玩法护盾系数 : ", play_k)

    local result = hpMax * k * play_k
    BattleLogger.logNumerical("生命值百分比护盾效果 : ", result)
    self.result = result
end

function M:_doModify()
    self.hostCharacter:GetBaseAtt():AddShieldEff(self, self.fromId)
    ---- todo  通知渲染层
end

function M:GetResultValue()
    return self.result
end

function M:ChangeResultValue(value)
    self.result = value
end

function M:MulValue(value)
    self.result = self.result - value
    self.result = self.result <= 0 and 0 or self.result
end

return M
